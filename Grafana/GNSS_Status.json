{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    },
    {
      "name": "VAR_HOST",
      "type": "constant",
      "label": "lea-m8f",
      "value": "lea-m8f",
      "description": ""
    }
  ],
  "__elements": {
    "RxPYGpk4k": {
      "name": "Tracked Satellites_Multisystem",
      "uid": "RxPYGpk4k",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "yellow",
                  "value": null
                },
                {
                  "color": "#EAB839",
                  "value": 3
                },
                {
                  "color": "green",
                  "value": 5
                }
              ]
            },
            "unit": "short"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sats_used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Tracked Satellites",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": ".*gnss_system=\"(\\S+)\".*host=\"(\\S+)\".",
              "renamePattern": "$1"
            }
          },
          {
            "id": "renameByRegex",
            "options": {
              "regex": "all",
              "renamePattern": "Sum"
            }
          }
        ],
        "type": "stat"
      }
    },
    "9rmEMtz4k": {
      "name": "Visible Satellites_multisystem",
      "uid": "9rmEMtz4k",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [],
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "yellow",
                  "value": null
                },
                {
                  "color": "yellow",
                  "value": 3
                },
                {
                  "color": "green",
                  "value": 5
                }
              ]
            },
            "unit": "short"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sats_vis\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Visible Satellites",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": ".*gnss_system=\"(\\S+)\".*host=\"(\\S+)\".",
              "renamePattern": "$1"
            }
          },
          {
            "id": "renameByRegex",
            "options": {
              "regex": "all",
              "renamePattern": "Sum"
            }
          }
        ],
        "type": "stat"
      }
    },
    "KpVRNpk4z": {
      "name": "FixStatus",
      "uid": "KpVRNpk4z",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [
              {
                "options": {
                  "0": {
                    "index": 3,
                    "text": "Error"
                  },
                  "1": {
                    "index": 2,
                    "text": "No Fix"
                  },
                  "2": {
                    "color": "green",
                    "index": 1,
                    "text": "2D Fix"
                  },
                  "3": {
                    "color": "green",
                    "index": 0,
                    "text": "3D Fix"
                  },
                  "4": {
                    "index": 4,
                    "text": "3D DGPS"
                  }
                },
                "type": "value"
              }
            ],
            "max": 3,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"fixstatus_modified\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Status",
        "type": "stat"
      }
    },
    "pRlZvpkVk": {
      "name": "LatLong",
      "uid": "pRlZvpkVk",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 5,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "degree"
          },
          "overrides": []
        },
        "maxDataPoints": 500,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"lon\" or r[\"_field\"] == \"lat\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Position",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "lat",
              "renamePattern": "Latitude"
            }
          },
          {
            "id": "renameByRegex",
            "options": {
              "regex": "lon",
              "renamePattern": "Longitude"
            }
          }
        ],
        "type": "stat"
      }
    },
    "h6WsNpkVz": {
      "name": "FixStatus_Timeline",
      "uid": "h6WsNpkVz",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "fillOpacity": 70,
              "lineWidth": 0,
              "spanNulls": false
            },
            "decimals": 0,
            "mappings": [
              {
                "options": {
                  "0": {
                    "color": "red",
                    "index": 4,
                    "text": "Error"
                  },
                  "1": {
                    "color": "red",
                    "index": 3,
                    "text": "No Fix"
                  },
                  "2": {
                    "color": "orange",
                    "index": 2,
                    "text": "2D"
                  },
                  "3": {
                    "color": "yellow",
                    "index": 1,
                    "text": "3D"
                  },
                  "4": {
                    "color": "green",
                    "index": 0,
                    "text": "DGPS"
                  }
                },
                "type": "value"
              }
            ],
            "max": 4,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "dark-red",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byFrameRefID",
                "options": "A"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "S"
                }
              ]
            }
          ]
        },
        "options": {
          "alignValue": "left",
          "legend": {
            "displayMode": "hidden",
            "placement": "bottom"
          },
          "mergeValues": true,
          "rowHeight": 0.9,
          "showValue": "auto",
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "9.0.5",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"fixstatus_modified\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Status",
        "transformations": [
          {
            "id": "convertFieldType",
            "options": {
              "conversions": [
                {
                  "destinationType": "string",
                  "targetField": "fixstatus_modified"
                }
              ],
              "fields": {}
            }
          }
        ],
        "type": "state-timeline"
      }
    },
    "T1ndPck4z": {
      "name": "GNSS_SNR_Speedometer",
      "uid": "T1ndPck4z",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "yellow",
                  "value": 20
                },
                {
                  "color": "green",
                  "value": 40
                }
              ]
            },
            "unit": "none"
          },
          "overrides": []
        },
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true,
          "text": {}
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(B)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([B])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "H"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "I"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "E"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "F"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(GP)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "C"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GP])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "D"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(QS)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "G"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([S])([0-9])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "J"
          }
        ],
        "title": "SNR",
        "transformations": [],
        "type": "gauge"
      }
    },
    "pwSpE5z4z": {
      "name": "GNSS Tracked Status",
      "uid": "pwSpE5z4z",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [
              {
                "options": {
                  "from": 0.5,
                  "result": {
                    "index": 0,
                    "text": "Y"
                  },
                  "to": 1
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 0,
                  "result": {
                    "index": 1,
                    "text": "N"
                  },
                  "to": 0.5
                },
                "type": "range"
              }
            ],
            "max": 1,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "green",
                  "value": 1
                }
              ]
            },
            "unit": "none"
          },
          "overrides": []
        },
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "",
            "values": false
          },
          "text": {},
          "textMode": "auto"
        },
        "pluginVersion": "9.0.6",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(B)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([B])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "H"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "I"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "E"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "F"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(GP)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "C"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GP])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "D"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([QS])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "G"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([S])([0-9])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "J"
          }
        ],
        "title": "Tracking Status",
        "transformations": [],
        "type": "stat"
      }
    },
    "53Lvntk4k": {
      "name": "Satellite Count Multisystem",
      "uid": "53Lvntk4k",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "graph": false,
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "log": 2,
                "type": "log"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "short"
          },
          "overrides": []
        },
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "7.5.11",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sats_used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"sats_vis\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Satellite Count",
        "transformations": [
          {
            "id": "renameByRegex",
            "options": {
              "regex": "sats_used.*gnss_system=\"(\\S+)\".*host=\"(\\S+)\".",
              "renamePattern": "Used $1"
            }
          },
          {
            "id": "renameByRegex",
            "options": {
              "regex": "sats_vis.*gnss_system=\"(\\S+)\".*host=\"(\\S+)\".",
              "renamePattern": "Visible $1"
            }
          },
          {
            "id": "renameByRegex",
            "options": {
              "regex": "Used all",
              "renamePattern": "Used Sum"
            }
          },
          {
            "id": "renameByRegex",
            "options": {
              "regex": "Visible all",
              "renamePattern": "Visible Sum"
            }
          }
        ],
        "type": "timeseries"
      }
    },
    "x9rjPckVz": {
      "name": "Satellite Tracking State",
      "uid": "x9rjPckVz",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "fillOpacity": 66,
              "lineWidth": 0,
              "spanNulls": 3600000
            },
            "mappings": [
              {
                "options": {
                  "0": {
                    "index": 0,
                    "text": "N"
                  },
                  "1": {
                    "index": 1,
                    "text": "Y"
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "red",
                  "value": null
                },
                {
                  "color": "green",
                  "value": 0.5
                }
              ]
            }
          },
          "overrides": []
        },
        "options": {
          "alignValue": "left",
          "legend": {
            "displayMode": "hidden",
            "placement": "bottom"
          },
          "mergeValues": true,
          "rowHeight": 0.8,
          "showValue": "never",
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(B)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([B])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "H"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "I"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "E"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "F"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(GP)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "C"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GP])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "D"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(QS)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "G"
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "hide": false,
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([S])([0-9])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "J"
          }
        ],
        "title": "Satellite Tracking",
        "transformations": [],
        "type": "state-timeline"
      }
    },
    "F1MRFAzVk": {
      "name": "Satellite SNR",
      "uid": "F1MRFAzVk",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "graph": false,
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "smooth",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "decimals": 0,
            "mappings": [],
            "max": 60,
            "min": 15,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "dB"
          },
          "overrides": []
        },
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "7.5.11",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(B)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([B])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "C",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "D",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "E",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "F",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(GP)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "G",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GP])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "H",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(QS)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "I",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"snr\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([S])([0-9])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "J",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Satellite SNR",
        "transformations": [],
        "type": "timeseries"
      }
    },
    "yZAUO0kVk": {
      "name": "Satellite Az",
      "uid": "yZAUO0kVk",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "axisWidth": 50,
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "graph": false,
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "stepBefore",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "decimals": 0,
            "mappings": [
              {
                "options": {
                  "from": 0,
                  "result": {
                    "text": "N"
                  },
                  "to": 11.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 11.25,
                  "result": {
                    "text": "NNE"
                  },
                  "to": 33.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 33.75,
                  "result": {
                    "text": "NE"
                  },
                  "to": 56.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 56.25,
                  "result": {
                    "text": "ENE"
                  },
                  "to": 78.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 78.75,
                  "result": {
                    "text": "E"
                  },
                  "to": 101.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 101.25,
                  "result": {
                    "text": "ESE"
                  },
                  "to": 123.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 123.75,
                  "result": {
                    "text": "SE"
                  },
                  "to": 146.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 146.25,
                  "result": {
                    "text": "SSE"
                  },
                  "to": 168.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 168.75,
                  "result": {
                    "text": "S"
                  },
                  "to": 191.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 191.25,
                  "result": {
                    "text": "SSW"
                  },
                  "to": 213.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 213.75,
                  "result": {
                    "text": "SW"
                  },
                  "to": 236.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 236.25,
                  "result": {
                    "text": "WSW"
                  },
                  "to": 258.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 258.75,
                  "result": {
                    "text": "W"
                  },
                  "to": 281.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 281.25,
                  "result": {
                    "text": "WNW"
                  },
                  "to": 303.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 303.75,
                  "result": {
                    "text": "NW"
                  },
                  "to": 323.25
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 323.25,
                  "result": {
                    "text": "NNW"
                  },
                  "to": 348.75
                },
                "type": "range"
              },
              {
                "options": {
                  "from": 348.75,
                  "result": {
                    "text": "N"
                  },
                  "to": 360
                },
                "type": "range"
              }
            ],
            "max": 360,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                }
              ]
            },
            "unit": "degree"
          },
          "overrides": []
        },
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "7.5.11",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(B)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([B])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "C",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "D",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "E",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "F",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(GP)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "G",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GP])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "H",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(QS)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "I",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"azi\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([S])([0-9])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "J",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Satellite Az",
        "type": "timeseries"
      }
    },
    "y2jsdAz4k": {
      "name": "Satellite El",
      "uid": "y2jsdAz4k",
      "kind": 1,
      "model": {
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "graph": false,
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "stepBefore",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "never",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "decimals": 0,
            "mappings": [],
            "max": 90,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green"
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "degree"
          },
          "overrides": []
        },
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "pluginVersion": "7.5.11",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(B)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([B])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "C",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GA])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "D",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "E",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GL])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "F",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(GP)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "G",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([GP])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "H",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /(QS)([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "I",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          },
          {
            "datasource": {
              "type": "influxdb",
              "uid": "${DS_INFLUXDB}"
            },
            "groupBy": [
              {
                "params": [
                  "$__interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "hide": false,
            "orderByTime": "ASC",
            "policy": "default",
            "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd_sat_details\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ele\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> filter(fn: (r) => r[\"prn\"] =~ /([S])([0-9])([0-9])([0-9]$)/)\r\n  |> group(columns: [\"prn\"])\r\n  |> filter(fn: (r) => r[\"_value\"] > 0)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "J",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                }
              ]
            ],
            "tags": []
          }
        ],
        "title": "Satellite El",
        "type": "timeseries"
      }
    }
  },
  "__requires": [
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.0.6"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "pr0ps-trackmap-panel",
      "name": "TrackMap",
      "version": "2.1.2"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "state-timeline",
      "name": "State timeline",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "pM3PWMq7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 17,
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "pM3PWMq7z"
          },
          "refId": "A"
        }
      ],
      "title": "Current",
      "type": "row"
    },
    {
      "gridPos": {
        "h": 6,
        "w": 5,
        "x": 0,
        "y": 1
      },
      "id": 36,
      "libraryPanel": {
        "uid": "RxPYGpk4k",
        "name": "Tracked Satellites_Multisystem"
      }
    },
    {
      "gridPos": {
        "h": 6,
        "w": 5,
        "x": 5,
        "y": 1
      },
      "id": 34,
      "libraryPanel": {
        "uid": "9rmEMtz4k",
        "name": "Visible Satellites_multisystem"
      }
    },
    {
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 10,
        "y": 1
      },
      "id": 40,
      "libraryPanel": {
        "uid": "KpVRNpk4z",
        "name": "FixStatus"
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "lengthm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 12,
        "y": 1
      },
      "id": 21,
      "maxDataPoints": 500,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "9.0.6",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"gpsd\")\r\n  |> range(start: -1m)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"alt\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Altitude",
      "type": "stat"
    },
    {
      "autoZoom": true,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "defaultLayer": "OpenStreetMap",
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 14,
        "y": 1
      },
      "id": 11,
      "lineColor": "red",
      "maxDataPoints": 500,
      "pluginVersion": "7.5.11",
      "pointColor": "royalblue",
      "scrollWheelZoom": false,
      "showLayerChanger": true,
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"gpsd\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gpsd\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"lon\" or r[\"_field\"] == \"lat\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${host}\")\r\n  |> group(columns: [\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Position",
      "type": "pr0ps-trackmap-panel"
    },
    {
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 10,
        "y": 4
      },
      "id": 45,
      "libraryPanel": {
        "uid": "pRlZvpkVk",
        "name": "LatLong"
      }
    },
    {
      "gridPos": {
        "h": 3,
        "w": 20,
        "x": 0,
        "y": 7
      },
      "id": 43,
      "libraryPanel": {
        "uid": "h6WsNpkVz",
        "name": "FixStatus_Timeline"
      }
    },
    {
      "gridPos": {
        "h": 6,
        "w": 13,
        "x": 0,
        "y": 10
      },
      "id": 25,
      "libraryPanel": {
        "uid": "T1ndPck4z",
        "name": "GNSS_SNR_Speedometer"
      }
    },
    {
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 13,
        "y": 10
      },
      "id": 27,
      "libraryPanel": {
        "uid": "pwSpE5z4z",
        "name": "GNSS Tracked Status"
      }
    },
    {
      "gridPos": {
        "h": 10,
        "w": 10,
        "x": 0,
        "y": 16
      },
      "id": 38,
      "libraryPanel": {
        "uid": "53Lvntk4k",
        "name": "Satellite Count Multisystem"
      }
    },
    {
      "gridPos": {
        "h": 10,
        "w": 10,
        "x": 10,
        "y": 16
      },
      "id": 29,
      "libraryPanel": {
        "uid": "x9rjPckVz",
        "name": "Satellite Tracking State"
      }
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "pM3PWMq7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 19,
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "pM3PWMq7z"
          },
          "refId": "A"
        }
      ],
      "title": "Details",
      "type": "row"
    },
    {
      "gridPos": {
        "h": 8,
        "w": 20,
        "x": 0,
        "y": 27
      },
      "id": 51,
      "libraryPanel": {
        "uid": "F1MRFAzVk",
        "name": "Satellite SNR"
      }
    },
    {
      "gridPos": {
        "h": 11,
        "w": 10,
        "x": 0,
        "y": 35
      },
      "id": 49,
      "libraryPanel": {
        "uid": "yZAUO0kVk",
        "name": "Satellite Az"
      }
    },
    {
      "gridPos": {
        "h": 11,
        "w": 10,
        "x": 10,
        "y": 35
      },
      "id": 47,
      "libraryPanel": {
        "uid": "y2jsdAz4k",
        "name": "Satellite El"
      }
    },
    {
      "gridPos": {
        "h": 24,
        "w": 20,
        "x": 0,
        "y": 46
      },
      "id": 30,
      "libraryPanel": {
        "uid": "x9rjPckVz",
        "name": "Satellite Tracking State"
      }
    }
  ],
  "refresh": "15m",
  "schemaVersion": 36,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "description": "Host ID",
        "hide": 2,
        "label": "lea-m8f",
        "name": "host",
        "query": "${VAR_HOST}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_HOST}",
          "text": "${VAR_HOST}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_HOST}",
            "text": "${VAR_HOST}",
            "selected": false
          }
        ]
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "LEA-M8F GNSS Status",
  "uid": "cttz3OkVz",
  "version": 39,
  "weekStart": ""
}
